version: 2.1

executors:
  ocix:
    machine: true
    working_directory: ~/ocix

commands:
  setup_environment:
    description: Setup OCI-Cross environment variables 
    steps:
      - run: 
          name: Export OCI-Cross Registry, Organization and Version
          command: |
            ./scripts/ocix-env.sh >> $BASH_ENV
  build_test_ocix_image:
    description: Build & test an OCI-Cross container image
    parameters:
      image_name:
        type: string
    steps:
      - restore_cache:
          key: ocix-base-assets-{{ .Revision }}
      - setup_environment
      - run:
          name: Build << parameters.image_name >>
          no_output_timeout: 1.5h
          command: |
            docker load -i ~/ocix/ocix-base.tar
            make << parameters.image_name >>
            docker save --output ~/ocix/<< parameters.image_name >>.tar ${OCIX_REGISTRY}${OCIX_PORT}/${OCIX_ORG}/<< parameters.image_name >>:${OCIX_VERSION}
      - run:
         name: Test << parameters.image_name >>
         command: |
            make << parameters.image_name >>.test
      - save_cache:
          key: << parameters.image_name >>-assets-{{ .Revision }}
          paths: ~/ocix/<< parameters.image_name >>.tar

  deploy_ocix_image:
    description: Deploy a OCI-Cross container image
    parameters:
      image_name:
        type: string
    steps:
      - restore_cache:
          key: << parameters.image_name >>-assets-{{ .Revision }}
      - setup_environment
      - deploy:
          name: Deploy << parameters.image_name >>
          command: |
            echo ${OCIX_REGISTRY}
            echo ${OCIX_REGISTRY}${OCIX_PORT}/${OCIX_ORG}/<< parameters.image_name >>:${OCIX_VERSION}
            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
              docker load --quiet --input ~/ocix/<< parameters.image_name >>.tar
              echo "${OCIX_REGISTRY_PASSWORD}" | docker login --username ${OCIX_REGISTRY_USER} --password-stdin https://${OCIX_REGISTRY}${OCIX_PORT}
              docker push ${OCIX_REGISTRY}${OCIX_PORT}/${OCIX_ORG}/<< parameters.image_name >>:${OCIX_VERSION}
            fi

references:
  workflow-settings: &workflow-settings
    filters:
      branches:
        only: develop

jobs:
  ocix-base:
    executor: ocix
    steps:
      - checkout
      - setup_environment
      - run:
          name: Build ocix-base
          command: |
            docker pull debian:10.3-slim
            make ocix-base
            mkdir -p ~/ocix
            docker save --output ~/ocix/ocix-base.tar debian:10.3-slim ${OCIX_REGISTRY}${OCIX_PORT}/${OCIX_ORG}/ocix-base:${OCIX_VERSION}
      - run:
         name: Test ocix-base
         command: |
           make ocix-base.test
      - save_cache:
          key: ocix-base-assets-{{ .Revision }}
          paths:
            - ~/ocix/ocix-base.tar
            - ~/ocix

  ocix:
    description: Invoke the OCI-Cross Build and Test Command
    parameters:
      image:
        description: "The OCI-Cross Container Image Name"
        type: string
    executor: ocix
    steps:
      - build_test_ocix_image:
          image_name: << parameters.image >>
      - deploy_ocix_image:
          image_name: << parameters.image >>

  deploy:
    executor: ocix
    steps:
      - deploy_ocix_image:
          image_name: "ocix-base"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - ocix-base:
          <<: *workflow-settings
      # - ocix:
      #     name: "linux-x64"
      #     image: "ocix-linux-x64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "android-arm"
      #     image: "ocix-android-arm"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "android-arm64"
      #     image: "ocix-android-arm64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "web-wasm"
      #     image: "ocix-web-wasm"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-arm64"
      #     image: "ocix-linux-arm64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-armv5"
      #     image: "ocix-linux-armv5"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-armv6"
      #     image: "ocix-linux-armv6"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-armv7"
      #     image: "ocix-linux-armv7"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-armv7a"
      #     image: "ocix-linux-armv7a"
      #     requires:
      #       - ocix-base
      # # Image build currently broken. See #209
      # #- ocix:
      # #    name: "linux-mipsel"
      # #    image: "ocix-linux-mipsel"
      # #    requires:
      # #      - ocix-base
      # - ocix:
      #     name: "linux-s390x"
      #     image: "ocix-linux-s390x"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-ppc64el"
      #     image: "ocix-linux-ppc64el"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-x64"
      #     image: "ocix-linux-x64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "linux-x86"
      #     image: "ocix-linux-x86"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "manylinux1-x64"
      #     image: "ocix-manylinux1-x64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "manylinux1-x86"
      #     image: "ocix-manylinux1-x86"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "manylinux2010-x64"
      #     image: "ocix-manylinux2010-x64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "manylinux2010-x86"
      #     image: "ocix-manylinux2010-x86"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "manylinux2014-x64"
      #     image: "ocix-manylinux2014-x64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "windows-static-x64"
      #     image: "ocix-windows-static-x64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "windows-static-x64-posix"
      #     image: "ocix-windows-static-x64-posix"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "windows-static-x86"
      #     image: "ocix-windows-static-x86"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "windows-shared-x64"
      #     image: "ocix-windows-shared-x64"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "windows-shared-x64-posix"
      #     image: "ocix-windows-shared-x64-posix"
      #     requires:
      #       - ocix-base
      # - ocix:
      #     name: "windows-shared-x86"
      #     image: "ocix-windows-shared-x86"
      #     requires:
      #       - ocix-base
      - deploy:
          requires:
            - ocix-base
